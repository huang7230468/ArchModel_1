<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!--是对包进行扫描，实现注释驱动Bean定义，
    同时将bean自动注入容器中使用。即解决了@Controller标识的类的bean的注入和使用-->
    <context:component-scan base-package="ant.dubbo" />
    <!--相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean，
    配置一些messageconverter。即解决了@Controller注解的使用前提配置。-->
    <mvc:annotation-driven >
      <!--  <mvc:message-converters>
            <ref bean="fastJsonHttpMessageConverter"/>
        </mvc:message-converters>-->
    </mvc:annotation-driven>
   <!-- <bean id="stringHttpMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8" index="0"></constructor-arg>
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <bean id="fastJsonHttpMessageConverter"
          class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">

        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
        <property name="features">
            <list>
                &lt;!&ndash; <value>WriteMapNullValue</value> &ndash;&gt;
                <value>QuoteFieldNames</value>
                <value>WriteDateUseDateFormat</value>
            </list>
        </property>
    </bean>-->

</beans>